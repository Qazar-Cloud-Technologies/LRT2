/*
 * ------------------------------------------------------------
 * IMPORTANT: The contents of this file are auto-generated.
 *
 * This file may be updated by the Shopify admin theme editor
 * or related systems. Please exercise caution as any changes
 * made to this file may be overwritten.
 * ------------------------------------------------------------
 */
{
  "name": "t:sections.header.name",
  "type": "header",
  "sections": {
    "announcement-bar": {
      "type": "announcement-bar",
      "blocks": {
        "announcement-bar-0": {
          "type": "announcement",
          "settings": {
            "text": "New Website Launch | Wish Apparels X The Other Dev",
            "link": "https://otherdev.com"
          }
        }
      },
      "block_order": [
        "announcement-bar-0"
      ],
      "disabled": true,
      "settings": {
        "color_scheme": "",
        "show_line_separator": true,
        "show_social": false,
        "auto_rotate": false,
        "change_slides_speed": 5,
        "enable_country_selector": false,
        "enable_language_selector": false
      }
    },
    "header": {
      "type": "header",
      "disabled": true,
      "settings": {
        "logo_position": "left",
        "menu": "main-menu",
        "menu_type_desktop": "mega",
        "sticky_header_type": "always",
        "show_line_separator": false,
        "color_scheme": "scheme-1",
        "menu_color_scheme": "scheme-1",
        "enable_country_selector": true,
        "enable_language_selector": true,
        "enable_customer_avatar": true,
        "mobile_logo_position": "left",
        "margin_bottom": 0,
        "padding_top": 20,
        "padding_bottom": 20
      }
    },
    "custom_liquid_9zVg8G": {
      "type": "custom-liquid",
      "custom_css": [],
      "name": "Menu",
      "settings": {
        "custom_liquid": "{% comment %}\nMega Menu with integrated Cart and Search\nCombines dynamic collections menu with cart/search functionality\n{% endcomment %}\n\n<div class=\"mega-menu-wrapper\">\n  {% comment %} Top bar with search and cart {% endcomment %}\n  <div class=\"mega-menu-header\">\n    <div class=\"mega-menu-container\">\n      {% comment %} Logo/Brand {% endcomment %}\n      <div class=\"mega-menu-logo\">\n        <a href=\"{{ routes.root_url }}\" class=\"logo-link\">\n          {% if shop.logo %}\n            <img src=\"{{ shop.logo | img_url: '180x' }}\" alt=\"{{ shop.name }}\" class=\"logo-image\">\n          {% else %}\n            <span class=\"logo-text\">{{ shop.name }}</span>\n          {% endif %}\n        </a>\n      </div>\n\n      {% comment %} Search Bar {% endcomment %}\n      <div class=\"mega-menu-search\">\n        <form action=\"{{ routes.search_url }}\" method=\"get\" role=\"search\" class=\"search-form\">\n          <div class=\"search-input-wrapper\">\n            <input type=\"search\" \n                   name=\"q\" \n                   placeholder=\"Rechercher des pièces...\" \n                   class=\"search-input\"\n                   aria-label=\"Rechercher dans la boutique\"\n                   autocomplete=\"off\">\n            <button type=\"submit\" class=\"search-button\" aria-label=\"Rechercher\">\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M19 19L14.65 14.65M17 9C17 13.4183 13.4183 17 9 17C4.58172 17 1 13.4183 1 9C1 4.58172 4.58172 1 9 1C13.4183 1 17 4.58172 17 9Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>\n            </button>\n          </div>\n          <div class=\"search-suggestions\" id=\"search-suggestions\"></div>\n        </form>\n      </div>\n\n      {% comment %} Cart and Account {% endcomment %}\n      <div class=\"mega-menu-actions\">\n        {% comment %} Account {% endcomment %}\n        <a href=\"{{ routes.account_url }}\" class=\"action-button account-button\" aria-label=\"Mon compte\">\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M20 21V19C20 17.9391 19.5786 16.9217 18.8284 16.1716C18.0783 15.4214 17.0609 15 16 15H8C6.93913 15 5.92172 15.4214 5.17157 16.1716C4.42143 16.9217 4 17.9391 4 19V21M16 7C16 9.20914 14.2091 11 12 11C9.79086 11 8 9.20914 8 7C8 4.79086 9.79086 3 12 3C14.2091 3 16 4.79086 16 7Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          </svg>\n        </a>\n\n        {% comment %} Cart with count {% endcomment %}\n        <button class=\"action-button cart-button\" \n                aria-label=\"Panier\" \n                data-cart-toggle\n                aria-expanded=\"false\">\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M9 22C9.55228 22 10 21.5523 10 21C10 20.4477 9.55228 20 9 20C8.44772 20 8 20.4477 8 21C8 21.5523 8.44772 22 9 22Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            <path d=\"M20 22C20.5523 22 21 21.5523 21 21C21 20.4477 20.5523 20 20 20C19.4477 20 19 20.4477 19 21C19 21.5523 19.4477 22 20 22Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            <path d=\"M1 1H5L7.68 14.39C7.77144 14.8504 8.02191 15.264 8.38755 15.5583C8.75318 15.8526 9.2107 16.009 9.68 16H19.4C19.8693 16.009 20.3268 15.8526 20.6925 15.5583C21.0581 15.264 21.3086 14.8504 21.4 14.39L23 6H6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          </svg>\n          <span class=\"cart-count\" data-cart-count>{{ cart.item_count }}</span>\n        </button>\n\n        {% comment %} Mobile menu toggle {% endcomment %}\n        <button class=\"mobile-menu-toggle\" aria-label=\"Menu\" aria-expanded=\"false\">\n          <span class=\"hamburger-line\"></span>\n          <span class=\"hamburger-line\"></span>\n          <span class=\"hamburger-line\"></span>\n        </button>\n      </div>\n    </div>\n  </div>\n\n  {% comment %} Cart Drawer {% endcomment %}\n  <div class=\"cart-drawer\" id=\"cart-drawer\" aria-hidden=\"true\">\n    <div class=\"cart-drawer-header\">\n      <h2 class=\"cart-drawer-title\">Mon Panier</h2>\n      <button class=\"cart-drawer-close\" data-cart-close aria-label=\"Fermer le panier\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M18 6L6 18M6 6L18 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n      </button>\n    </div>\n\n    <div class=\"cart-drawer-content\">\n      {% if cart.item_count > 0 %}\n        <div class=\"cart-items\">\n          {% for item in cart.items %}\n            <div class=\"cart-item\" data-variant-id=\"{{ item.variant_id }}\">\n              <div class=\"cart-item-image\">\n                <img src=\"{{ item.image | img_url: '80x80' }}\" alt=\"{{ item.title }}\" loading=\"lazy\">\n              </div>\n              <div class=\"cart-item-details\">\n                <h3 class=\"cart-item-title\">{{ item.product.title }}</h3>\n                {% if item.variant.title != 'Default Title' %}\n                  <p class=\"cart-item-variant\">{{ item.variant.title }}</p>\n                {% endif %}\n                <div class=\"cart-item-price\">{{ item.final_price | money }}</div>\n              </div>\n              <div class=\"cart-item-quantity\">\n                <button class=\"quantity-button\" data-quantity-decrease aria-label=\"Diminuer la quantité\">-</button>\n                <input type=\"number\" \n                       class=\"quantity-input\" \n                       value=\"{{ item.quantity }}\" \n                       min=\"0\" \n                       data-variant-id=\"{{ item.variant_id }}\"\n                       aria-label=\"Quantité\">\n                <button class=\"quantity-button\" data-quantity-increase aria-label=\"Augmenter la quantité\">+</button>\n              </div>\n              <button class=\"cart-item-remove\" data-remove-item data-variant-id=\"{{ item.variant_id }}\" aria-label=\"Retirer l'article\">\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M2.5 5H17.5M8.33333 9.16667V14.1667M11.6667 9.16667V14.1667M3.33333 5L4.16667 15.8333C4.16667 16.2754 4.34226 16.6993 4.65482 17.0118C4.96738 17.3244 5.39131 17.5 5.83333 17.5H14.1667C14.6087 17.5 15.0326 17.3244 15.3452 17.0118C15.6577 16.6993 15.8333 16.2754 15.8333 15.8333L16.6667 5M6.66667 5V3.33333C6.66667 2.89131 6.84226 2.46738 7.15482 2.15482C7.46738 1.84226 7.89131 1.66667 8.33333 1.66667H11.6667C12.1087 1.66667 12.5326 1.84226 12.8452 2.15482C13.1577 2.46738 13.3333 2.89131 13.3333 3.33333V5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                </svg>\n              </button>\n            </div>\n          {% endfor %}\n        </div>\n\n        <div class=\"cart-drawer-footer\">\n          <div class=\"cart-subtotal\">\n            <span>Sous-total:</span>\n            <span class=\"cart-subtotal-price\">{{ cart.total_price | money }}</span>\n          </div>\n          <p class=\"cart-note\">Taxes et frais de livraison calculés à la caisse</p>\n          <a href=\"{{ routes.cart_url }}\" class=\"cart-view-button\">Voir le panier</a>\n          <button class=\"cart-checkout-button\" onclick=\"window.location.href='{{ routes.checkout_url }}'\">\n            Passer la commande\n          </button>\n        </div>\n      {% else %}\n        <div class=\"cart-empty\">\n          <svg width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" opacity=\"0.2\">\n            <path d=\"M9 22C9.55228 22 10 21.5523 10 21C10 20.4477 9.55228 20 9 20C8.44772 20 8 20.4477 8 21C8 21.5523 8.44772 22 9 22Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            <path d=\"M20 22C20.5523 22 21 21.5523 21 21C21 20.4477 20.5523 20 20 20C19.4477 20 19 20.4477 19 21C19 21.5523 19.4477 22 20 22Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            <path d=\"M1 1H5L7.68 14.39C7.77144 14.8504 8.02191 15.264 8.38755 15.5583C8.75318 15.8526 9.2107 16.009 9.68 16H19.4C19.8693 16.009 20.3268 15.8526 20.6925 15.5583C21.0581 15.264 21.3086 14.8504 21.4 14.39L23 6H6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          </svg>\n          <p>Votre panier est vide</p>\n          <a href=\"{{ routes.all_products_collection_url }}\" class=\"cart-continue-shopping\">\n            Continuer les achats\n          </a>\n        </div>\n      {% endif %}\n    </div>\n  </div>\n\n  {% comment %} Dynamic Collections Menu {% endcomment %}\n  {% comment %}\n  Dynamic Grid Menu with Glass Effect and Left Icons\n  Reads collections and their metafields to build parent/child menu structure\n  {% endcomment %}\n\n  {% assign all_collections_array = collections | map: 'handle' %}\n  {% assign parent_collections = '' %}\n  {% assign all_parents_data = '' %}\n\n  {% comment %} Identify parent collections (no underscore in handle) {% endcomment %}\n  {% for handle in all_collections_array %}\n    {% unless handle contains '_' %}\n      {% assign collection = collections[handle] %}\n      {% if collection.metafields.custom.show_in_menu == true %}\n        {% assign order = collection.metafields.custom.order | default: 999 %}\n        {% assign parent_collections = parent_collections | append: handle | append: ',' %}\n        {% assign parent_data = handle | append: '|' | append: order %}\n        {% assign all_parents_data = all_parents_data | append: parent_data | append: ',' %}\n      {% endif %}\n    {% endunless %}\n  {% endfor %}\n\n  {% comment %} Sort parents by order {% endcomment %}\n  {% assign parents_with_order = all_parents_data | split: ',' %}\n  {% assign sorted_parents = '' %}\n\n  {% comment %} Simple bubble sort for parent collections by order {% endcomment %}\n  {% for i in (1..99) %}\n    {% assign lowest_order = 999 %}\n    {% assign lowest_handle = '' %}\n    \n    {% for parent_data in parents_with_order %}\n      {% if parent_data != blank %}\n        {% assign parts = parent_data | split: '|' %}\n        {% assign handle = parts[0] %}\n        {% assign order = parts[1] | plus: 0 %}\n        \n        {% unless sorted_parents contains handle %}\n          {% if order < lowest_order %}\n            {% assign lowest_order = order %}\n            {% assign lowest_handle = handle %}\n          {% endif %}\n        {% endunless %}\n      {% endif %}\n    {% endfor %}\n    \n    {% if lowest_handle != blank %}\n      {% assign sorted_parents = sorted_parents | append: lowest_handle | append: ',' %}\n    {% endif %}\n    \n    {% if sorted_parents contains lowest_handle %}\n      {% continue %}\n    {% endif %}\n  {% endfor %}\n\n  {% assign sorted_parents_array = sorted_parents | split: ',' %}\n\n  <nav class=\"grid-category-menu\" role=\"navigation\" aria-label=\"Category menu\">\n    <ul class=\"grid-menu-container\">\n      {% for parent_handle in sorted_parents_array %}\n        {% if parent_handle != blank %}\n          {% assign parent_collection = collections[parent_handle] %}\n          {% if parent_collection %}\n            {% comment %} Check if this parent has children {% endcomment %}\n            {% assign has_children = false %}\n            {% assign parent_prefix = parent_handle | append: '_' %}\n            {% for handle in all_collections_array %}\n              {% assign handle_start = handle | slice: 0, parent_prefix.size %}\n              {% if handle_start == parent_prefix %}\n                {% assign child_collection = collections[handle] %}\n                {% if child_collection.metafields.custom.show_in_menu == true %}\n                  {% assign has_children = true %}\n                  {% break %}\n                {% endif %}\n              {% endif %}\n            {% endfor %}\n            \n            <li class=\"grid-menu-item{% if has_children %} has-children{% endif %}\">\n              <a href=\"{{ parent_collection.url }}\" class=\"grid-menu-link\">\n                {% if parent_collection.metafields.custom.icon %}\n                  <span class=\"menu-icon\" aria-hidden=\"true\">{{ parent_collection.metafields.custom.icon }}</span>\n                {% endif %}\n                <span class=\"menu-text\">\n                  {% if parent_collection.metafields.custom.display_name %}\n                    {{ parent_collection.metafields.custom.display_name }}\n                  {% else %}\n                    {{ parent_collection.title }}\n                  {% endif %}\n                </span>\n              </a>\n              \n              {% if has_children %}\n                {% comment %} Find and sort child collections {% endcomment %}\n                {% assign children_data = '' %}\n                {% assign parent_prefix = parent_handle | append: '_' %}\n                {% for handle in all_collections_array %}\n                  {% assign handle_start = handle | slice: 0, parent_prefix.size %}\n                  {% if handle_start == parent_prefix %}\n                    {% assign child_collection = collections[handle] %}\n                    {% if child_collection.metafields.custom.show_in_menu == true %}\n                      {% assign child_order = child_collection.metafields.custom.order | default: 999 %}\n                      {% assign child_data = handle | append: '|' | append: child_order %}\n                      {% assign children_data = children_data | append: child_data | append: ',' %}\n                    {% endif %}\n                  {% endif %}\n                {% endfor %}\n                \n                {% if children_data != blank %}\n                  {% assign children_with_order = children_data | split: ',' %}\n                  {% assign sorted_children = '' %}\n                  \n                  {% comment %} Sort children by order {% endcomment %}\n                  {% for i in (1..50) %}\n                    {% assign lowest_child_order = 999 %}\n                    {% assign lowest_child_handle = '' %}\n                    \n                    {% for child_data in children_with_order %}\n                      {% if child_data != blank %}\n                        {% assign child_parts = child_data | split: '|' %}\n                        {% assign child_handle = child_parts[0] %}\n                        {% assign child_order = child_parts[1] | plus: 0 %}\n                        \n                        {% unless sorted_children contains child_handle %}\n                          {% if child_order < lowest_child_order %}\n                            {% assign lowest_child_order = child_order %}\n                            {% assign lowest_child_handle = child_handle %}\n                          {% endif %}\n                        {% endunless %}\n                      {% endif %}\n                    {% endfor %}\n                    \n                    {% if lowest_child_handle != blank %}\n                      {% assign sorted_children = sorted_children | append: lowest_child_handle | append: ',' %}\n                    {% endif %}\n                  {% endfor %}\n                  \n                  {% assign sorted_children_array = sorted_children | split: ',' %}\n                  \n                  <ul class=\"grid-dropdown\" role=\"menu\">\n                    {% for child_handle in sorted_children_array %}\n                      {% if child_handle != blank %}\n                        {% assign child_collection = collections[child_handle] %}\n                        {% if child_collection %}\n                          <li role=\"none\">\n                            <a href=\"{{ child_collection.url }}\" role=\"menuitem\">\n                              {% if child_collection.metafields.custom.icon %}\n                                <span class=\"dropdown-icon\" aria-hidden=\"true\">{{ child_collection.metafields.custom.icon }}</span>\n                              {% endif %}\n                              <span>\n                                {% if child_collection.metafields.custom.display_name %}\n                                  {{ child_collection.metafields.custom.display_name }}\n                                {% else %}\n                                  {{ child_collection.title }}\n                                {% endif %}\n                              </span>\n                            </a>\n                          </li>\n                        {% endif %}\n                      {% endif %}\n                    {% endfor %}\n                  </ul>\n                {% endif %}\n              {% endif %}\n            </li>\n          {% endif %}\n        {% endif %}\n      {% endfor %}\n    </ul>\n  </nav>\n</div>\n\n<script>\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Cart functionality\n  const cartButton = document.querySelector('[data-cart-toggle]');\n  const cartDrawer = document.getElementById('cart-drawer');\n  const cartClose = document.querySelector('[data-cart-close]');\n  const cartCount = document.querySelector('[data-cart-count]');\n  \n  // Toggle cart drawer\n  function toggleCart() {\n    const isOpen = cartDrawer.getAttribute('aria-hidden') === 'false';\n    cartDrawer.setAttribute('aria-hidden', !isOpen);\n    cartButton.setAttribute('aria-expanded', !isOpen);\n    document.body.style.overflow = isOpen ? '' : 'hidden';\n  }\n  \n  cartButton.addEventListener('click', toggleCart);\n  cartClose.addEventListener('click', toggleCart);\n  \n  // Close cart when clicking outside\n  cartDrawer.addEventListener('click', function(e) {\n    if (e.target === cartDrawer) {\n      toggleCart();\n    }\n  });\n  \n  // Update cart quantity\n  document.querySelectorAll('[data-quantity-decrease], [data-quantity-increase]').forEach(button => {\n    button.addEventListener('click', function() {\n      const input = this.parentElement.querySelector('.quantity-input');\n      const currentValue = parseInt(input.value);\n      const isDecrease = this.hasAttribute('data-quantity-decrease');\n      const newValue = isDecrease ? Math.max(0, currentValue - 1) : currentValue + 1;\n      \n      input.value = newValue;\n      updateCartItem(input.dataset.variantId, newValue);\n    });\n  });\n  \n  // Remove cart item\n  document.querySelectorAll('[data-remove-item]').forEach(button => {\n    button.addEventListener('click', function() {\n      updateCartItem(this.dataset.variantId, 0);\n    });\n  });\n  \n  // Update cart via AJAX\n  function updateCartItem(variantId, quantity) {\n    fetch('/cart/change.js', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        id: variantId,\n        quantity: quantity\n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      // Update cart count\n      cartCount.textContent = data.item_count;\n      \n      // Reload cart drawer content\n      if (quantity === 0) {\n        const item = document.querySelector(`[data-variant-id=\"${variantId}\"]`);\n        if (item) item.remove();\n      }\n      \n      // Update totals\n      const subtotal = document.querySelector('.cart-subtotal-price');\n      if (subtotal) {\n        subtotal.textContent = formatMoney(data.total_price);\n      }\n      \n      // Show empty cart if needed\n      if (data.item_count === 0) {\n        location.reload(); // Simple reload for empty cart\n      }\n    });\n  }\n  \n  // Format money helper\n  function formatMoney(cents) {\n    return (cents / 100).toFixed(2) + ' €';\n  }\n  \n  // Search functionality\n  const searchInput = document.querySelector('.search-input');\n  const searchSuggestions = document.getElementById('search-suggestions');\n  let searchTimeout;\n  \n  searchInput.addEventListener('input', function() {\n    clearTimeout(searchTimeout);\n    const query = this.value.trim();\n    \n    if (query.length < 2) {\n      searchSuggestions.innerHTML = '';\n      return;\n    }\n    \n    searchTimeout = setTimeout(() => {\n      // Fetch search suggestions\n      fetch(`/search/suggest.json?q=${encodeURIComponent(query)}&resources[type]=product&resources[limit]=5`)\n        .then(response => response.json())\n        .then(data => {\n          if (data.resources.results.products.length > 0) {\n            const suggestions = data.resources.results.products.map(product => `\n              <a href=\"${product.url}\" class=\"search-suggestion-item\">\n                <img src=\"${product.featured_image}\" alt=\"${product.title}\" class=\"suggestion-image\">\n                <div class=\"suggestion-details\">\n                  <span class=\"suggestion-title\">${product.title}</span>\n                  <span class=\"suggestion-price\">${formatMoney(product.price)}</span>\n                </div>\n              </a>\n            `).join('');\n            \n            searchSuggestions.innerHTML = suggestions;\n          } else {\n            searchSuggestions.innerHTML = '<div class=\"no-suggestions\">Aucun résultat trouvé</div>';\n          }\n        });\n    }, 300);\n  });\n  \n  // Close search suggestions when clicking outside\n  document.addEventListener('click', function(e) {\n    if (!e.target.closest('.mega-menu-search')) {\n      searchSuggestions.innerHTML = '';\n    }\n  });\n  \n  // Mobile menu toggle\n  const mobileToggle = document.querySelector('.mobile-menu-toggle');\n  const menuContainer = document.querySelector('.grid-category-menu');\n  \n  mobileToggle.addEventListener('click', function() {\n    const isExpanded = this.getAttribute('aria-expanded') === 'true';\n    this.setAttribute('aria-expanded', !isExpanded);\n    menuContainer.classList.toggle('mobile-menu-open');\n  });\n});\n</script>",
        "color_scheme": "",
        "padding_top": 0,
        "padding_bottom": 0
      }
    }
  },
  "order": [
    "announcement-bar",
    "header",
    "custom_liquid_9zVg8G"
  ]
}
